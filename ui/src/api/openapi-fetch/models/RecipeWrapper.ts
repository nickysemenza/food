/* tslint:disable */
/* eslint-disable */
/**
 * Gourd Recipe Database
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Food,
    FoodFromJSON,
    FoodFromJSONTyped,
    FoodToJSON,
    RecipeDetail,
    RecipeDetailFromJSON,
    RecipeDetailFromJSONTyped,
    RecipeDetailToJSON,
} from './';

/**
 * A recipe with subcomponents
 * @export
 * @interface RecipeWrapper
 */
export interface RecipeWrapper {
    /**
     * id
     * @type {string}
     * @memberof RecipeWrapper
     */
    id: string;
    /**
     * 
     * @type {RecipeDetail}
     * @memberof RecipeWrapper
     */
    detail: RecipeDetail;
    /**
     * 
     * @type {{ [key: string]: Food; }}
     * @memberof RecipeWrapper
     */
    food_hints?: { [key: string]: Food; };
}

export function RecipeWrapperFromJSON(json: any): RecipeWrapper {
    return RecipeWrapperFromJSONTyped(json, false);
}

export function RecipeWrapperFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecipeWrapper {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'detail': RecipeDetailFromJSON(json['detail']),
        'food_hints': !exists(json, 'food_hints') ? undefined : (mapValues(json['food_hints'], FoodFromJSON)),
    };
}

export function RecipeWrapperToJSON(value?: RecipeWrapper | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'detail': RecipeDetailToJSON(value.detail),
        'food_hints': value.food_hints === undefined ? undefined : (mapValues(value.food_hints, FoodToJSON)),
    };
}


