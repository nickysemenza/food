/* tslint:disable */
/* eslint-disable */
/**
 * Gourd Recipe Database
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    Food,
    FoodFromJSON,
    FoodToJSON,
} from '../models';

export interface FoodApiGetFoodByIdRequest {
    fdcId: number;
}

/**
 * 
 */
export class FoodApi extends runtime.BaseAPI {

    /**
     * get a FDC entry by id
     */
    async getFoodByIdRaw(requestParameters: FoodApiGetFoodByIdRequest): Promise<runtime.ApiResponse<Food>> {
        if (requestParameters.fdcId === null || requestParameters.fdcId === undefined) {
            throw new runtime.RequiredError('fdcId','Required parameter requestParameters.fdcId was null or undefined when calling getFoodById.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = typeof token === 'function' ? token("bearerAuth", []) : token;

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/foods/{fdc_id}`.replace(`{${"fdc_id"}}`, encodeURIComponent(String(requestParameters.fdcId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => FoodFromJSON(jsonValue));
    }

    /**
     * get a FDC entry by id
     */
    async getFoodById(requestParameters: FoodApiGetFoodByIdRequest): Promise<Food> {
        const response = await this.getFoodByIdRaw(requestParameters);
        return await response.value();
    }

}
