# Recipe api outputs
type Ingredient {
  uuid: String!
  name: String!
  recipes: [Recipe!]
}

type SectionInstruction {
  uuid: String!
  instruction: String!
}

union IngredientInfo = Ingredient | Recipe

type SectionIngredient {
  uuid: String!
  info: IngredientInfo!
  grams: Float!
  amount: Float!
  unit: String!
  adjective: String!
  optional: Boolean!
}

type Section {
  uuid: String!
  minutes: Int!
  instructions: [SectionInstruction!]!
  ingredients: [SectionIngredient!]!
}

type Recipe {
  uuid: String!
  name: String!
  totalMinutes: Int!
  unit: String!
  sections: [Section!]!
}

# Recipe api inputs

input RecipeInput {
  uuid: String!
  name: String!
  totalMinutes: Int
  unit: String
  sections: [SectionInput!]
}

input SectionInstructionInput {
  instruction: String!
}

input SectionIngredientInput {
  name: String!
  grams: Float!
  amount: Float
  unit: String
  adjective: String
  optional: Boolean
}

input SectionInput {
  minutes: Int!
  instructions: [SectionInstructionInput!]!
  ingredients: [SectionIngredientInput!]!
}

input NewRecipe {
  name: String!
}

# USDA types

type Nutrient {
  id: Int!
  name: String!
  unitName: String!
}

type FoodNutrientDerivation {
  code: String!
  description: String!
}

type FoodNutrient {
  nutrient: Nutrient!
  amount: Float!
  dataPoints: Int!
}

type FoodCategory {
  code: String!
  description: String!
}

type Food {
  fdcId: Int!
  description: String!
  dataType: FoodDataType!
  category: FoodCategory
  nutrients: [FoodNutrient!]!
}

enum FoodDataType {
  foundation_food
  sample_food
  market_acquisition
  survey_fndds_food
  sub_sample_food
  agricultural_acquisition
  sr_legacy_food
  branded_food
}

# MUTATIONS AND QUERIES

type Mutation {
  createRecipe(recipe: NewRecipe): Recipe!
  updateRecipe(recipe: RecipeInput): Recipe!
}

type Query {
  recipes: [Recipe!]!
  recipe(uuid: String!): Recipe
  ingredients: [Ingredient!]!
  food(fdcId: Int!): Food
  foods(
    searchQuery: String!
    dataType: FoodDataType
    foodCategoryID: Int
  ): [Food!]
}
